package me.Jonathon594.Mythria.Commands;

import java.util.ArrayList;
import java.util.List;

import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import me.Jonathon594.Mythria.Main;
import me.Jonathon594.Mythria.DataTypes.IconMenu;
import me.Jonathon594.Mythria.DataTypes.MythriaPlayer;
import me.Jonathon594.Mythria.DataTypes.TradePerk;
import me.Jonathon594.Mythria.Util.MessageSender;
import me.Jonathon594.Mythria.Util.MythriaConstants;
import me.Jonathon594.Mythria.Util.MythriaUtil;
import net.milkbowl.vault.permission.Permission;

public class PerkCommandExecutor implements CommandExecutor {
	private final Main			plugin;
	private final Permission	permission;

	private final ChatColor		mainColor	= ChatColor.DARK_PURPLE;
	private final ChatColor		contColor	= ChatColor.AQUA;
	
	IconMenu perkIconMenu;

	public PerkCommandExecutor(final Main plugin, final Permission permission) {
		this.plugin = plugin;
		this.permission = permission;
		InitPerkMenu();
	}
	
	private void InitPerkMenu(){
		perkIconMenu = new IconMenu("My Fancy Menu", MythriaUtil.RountToMultiple(plugin.getMythriaTradePerks().size(), 9), new IconMenu.OptionClickEventHandler() {
            @Override
            public void onOptionClick(IconMenu.OptionClickEvent event) {
                event.getPlayer().sendMessage("You have chosen " + event.getName());
                event.setWillClose(true);
            }
        }, plugin);
		for(int i = 0; i<plugin.getMythriaTradePerks().size(); i++){
			TradePerk tp = plugin.getMythriaTradePerks().get(i);
			perkIconMenu.setOption(i, new ItemStack(Material.DIAMOND_SWORD), tp.getName(), tp.getDescription());
		}
	}

	private void LearnPerk(final CommandSender sender, final String[] args) {
		if (sender instanceof Player) {
			final TradePerk tp = plugin.GetTradePerk(args[1]);
			if (tp != null) {
				final MythriaPlayer mp = plugin.getMythriaPlayerManager().getPlayerByUUID(((Player) sender).getUniqueId());
				if (mp != null)
					if (!mp.getPlayerPerks().contains(tp)) {
						final List<String> perkNames = new ArrayList<String>();
						for (final TradePerk perk : mp.getPlayerPerks())
							perkNames.add(perk.getName());
						if (tp.getRequiredPerk() == null || perkNames.contains(tp.getRequiredPerk())) {
							final Player p = mp.getPlayer();
							final int pl = p.getLevel();
							final int cost = tp.getCost();
							if (p.getLevel() >= cost) {
								p.setLevel(pl - cost);
								mp.addPerk(tp);
								mp.ApplyAllEffects(permission);
								sender.sendMessage(mainColor + "You have learned a new perk! (" + contColor + tp.getName() + mainColor + ")");
								return;
							} else sender.sendMessage(mainColor + MythriaConstants.noLevels);
						} else sender.sendMessage(mainColor + MythriaConstants.noReqPerk);
					} else sender.sendMessage(mainColor + MythriaConstants.alreadyPerk);
			} else sender.sendMessage(mainColor + MythriaConstants.noPerk);
		} else sender.sendMessage(mainColor + MythriaConstants.console);
	}

	// /deity
	@Override
	public boolean onCommand(final CommandSender sender, final Command cmd, final String label, final String[] args) {
		switch (args.length) {
			case 0:
				SendDefaultInfo(sender);
				return true;
			case 1:
				if (args[0].equalsIgnoreCase("list")) {
					perkIconMenu.open((Player) sender);
					return true;
				}
				if (args[0].equalsIgnoreCase("crafting")) {
					SendCraftList(sender, args);
					return true;
				}
				SendDefaultInfo(sender);
				break;
		}
		return false;
	}

	private void SendCraftList(final CommandSender sender, final String[] args) {
		final List<String> materialList = new ArrayList<String>();
		for (final Material m : plugin.getMythriaPerkMaterials())
			if (m != null)
				materialList.add(contColor + m.name());
		if (materialList.size() > 0)
			MessageSender.SendList((Player) sender, materialList);
	}

	private void SendDefaultInfo(final CommandSender sender) {
		//------[]Perk Menu[]------
		///perk list - List all availible perks.
		///perk info [perk] - List information on [perk]
		///perk learn [perk] - Learn [perk]
		final List<String> Lines = new ArrayList<String>();
		Lines.add(mainColor + "------[]" + contColor + "Perk Menu" + mainColor + "[]------");
		Lines.add(contColor + "/perk list" + mainColor + " - List all availible perks");
		Lines.add(contColor + "/perk info [perk]" + mainColor + " - List information on [perk]");
		Lines.add(contColor + "/perk learn [perk]" + mainColor + " - Learn [perk]");
		Lines.add(contColor + "/perk crafting " + mainColor + "- List all items that require a perk to craft.");
		MessageSender.Send((Player) sender, Lines);
	}
}
